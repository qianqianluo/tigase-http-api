[[httpApiAvailComp]]
== Available modules
:author: Andrzej WÃ³jcik
:date: 2016-08-21 13:28

=== Admin UI module
This is very simple module for administration of Tigase XMPP Server using HTTP browser.
It allows administrators to execute ad-hoc commands from HTTP browser allowing to change some configuration options at runtime.
It can be accessed by pointing your browser to http://server.address:8080/admin/ and logging in with admin credentials.

=== DNS Web Service module
For web based XMPP clients it is not possible to execute DNS SRV requests to find address of XMPP server hosting for particular domain.
To solve this the DNS Web Service module was created.

It handles incoming HTTP GET request and using passed `domain` and `callback` HTTP parameters executes DNS requests as specified in link:https://xmpp.org/extensions/xep-0156.html[XEP-0156: Discovering Alternative XMPP Connection Methods].
Results are returned in JSON format for easy processing by web based XMPP client.

By default it is deployed at `/dns-webservice`

==== Parameters
domain:: Domain name to look for XMPP SRV client records.
callback:: Due to security reasons web based client may not be able to access some DNS Web Service due to cross-domain AJAX requests. Passing optional `callback` parameter sets name of callback for JSONP requests and results proper response in JSONP format.

==== Discover way to connect to XMPP server hosting `sure.im` domain.
Sending HTTP GET request to `http://our-xmpp-server:8080/dns-webservice/?domain=sure.im&version=2` you will receive following response:

[source,java]
----
{
  domain: 'sure.im',
  c2s: [
    {
      host: 'tigase.me',
      ip: ['198.100.157.101','198.100.157.103','198.100.153.203'],
      port: 5222,
      priority: 5
    }
  ],
  bosh: [
    {url:'http://blue.sure.im:5280/bosh'},
    {url:'http://green.sure.im:5280/bosh'},
    {url:'http://orange.sure.im:5280/bosh'}
  ],
  websocket: [
    {url:'ws://blue.sure.im:5290/'},
    {url:'ws://green.sure.im:5290/'},
    {url:'ws://orange.sure.im:5290/'}
  ]
}
----

As you can see in here we have names and IP address of XMPP servers hosting `sure.im` domain as well as list of URI for establishing connections using BOSH or WebSocket.

=== Index module
This module is deployed at `/` by default and provides list of installed and available modules for the virtual host when requested.

=== REST module
This module provides REST-like API for accessing Tigase XMPP Server. It uses Groovy scripts to process HTTP requests and prepare responses.

==== Configuration
REST module supports the following additional configuration options.

===== api-keys
This setting is used to provide API-keys that will provide access to the REST module. By default all access to REST module is blocked and nobody can access REST interface.

To allow access for specific clients you should create a list of API keys here and add one of the API keys listed here as the `api-key` HTTP request parameter sent to server. You can also allow anyone to access REST API by setting this to `open_access`, however this may leave your server vulnerable.

While configuring the API key, it is possible to set specific api keys for specific domains or vhosts.  These API keys will only be valid for the specified vhost and the path that matches the configured value.  For example:

.Example of API keys
[source,properties]
----
api-keys = [
    'test1',
    'test2:domain=api.example.com;rest.example.com:regex=/rest/*',
    'open_access:regex=/rest/test/.*'
]
----
does the following:

. sets API key `test1` which will be valid for any vhost and for any request.
. sets API key `test2` which will be valid only for requests to vhost `api.example.com` or `rest.example.com` and with a path matching the regular expression `/rest/*`
. sets open to everyone access to any domain/vhost with a request path matching the regular expression `/rest/test/.*`

===== rest-scripts-dir
Points to a local directory containing Groovy scripts used as handlers for processing REST API requests. *_(default: `scripts/rest`)_*

==== Example
Configure API keys for the REST module:

[source,java]
----
http {
    rest {
        api-keys = [
            'test1',
            'test2:domain=api.example.com;rest.example.com:regex=/rest/*',
            'open_access:regex=/rest/test/.*'
        ]
    }
}
----

=== Server status module
WARNING: This module is still a work in progress!

This module is designed to present current server status and report possible issues.

=== Setup module
Module is created to act as a web based installer and configuration utility for Tigase XMPP Server.
Allows you to modify basic Tigase XMPP Server settings, ie. related to database access.
Changes may be saved to configuration file from this module.

=== Web UI module
This module contains full web client based on http://www.tigase.net/content/jaxmpp-library:[Tigase JaXMPP] client library allowing user to chat, manage contacts list (roster), browse message archive, etc.
For more information on this module, consult the link:http://docs.tigase.org/tigase-server/snapshot/Administration_Guide/html/#_use_of_the_http_api[Administration Guide].
